version: '3.7'

services:
  coordinator:
    container_name: tr-coordinator
    image: 'trinodb/trino'
    ports:
      - "9091:8080"
    volumes:
      - ./etc/coordinator:/etc/trino
    networks:
      - trino-multinode-network

  worker1:
    container_name: tr-worker1
    image: 'trinodb/trino'
    ports:
      - "8081:8081"
    volumes:
      - ./etc/worker:/etc/trino
    networks:
      - trino-multinode-network

  worker2:
    container_name: tr-worker2
    image: 'trinodb/trino'
    ports:
      - "8082:8081"
    volumes:
      - ./etc/worker:/etc/trino
    networks:
      - trino-multinode-network

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:10.5.8
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    networks:
      - trino-multinode-network

  hive-metastore:
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - '9083:9083'
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      - mariadb
    networks:
      - trino-multinode-network
      
  minio:
    restart: always
    image: minio/minio:RELEASE.2023-02-27T18-10-45Z
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - trino-multinode-network
    command: server /data --console-address ':9001' --address ':9000'
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./data:/data

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    command: ['postgres', '-c', 'wal_level=logical']
    healthcheck:
      test: ['CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trino-multinode-network

volumes:
  minio-data:
    driver: local

networks:
  trino-multinode-network:
    driver: bridge
